AWSTemplateFormatVersion: '2010-09-09'
Description: RDS setup inside a VPC and storing connection credentials in Secrets Manager

Parameters:
  DBUsername:
    Description: The database admin username
    Type: String
    Default: admin

  DBPassword:
    Description: The database admin password
    Type: String
    NoEcho: true
    Default: hardcoded_password

Resources:

  CognitoUserDBSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: CognitoUserDBConnection
      Description: Connection credentials for the Cognito user details RDS instance
      SecretString: '{"username": "hardcoded_username", "password": "hardcoded_password"}'

  CognitoUserDB:
    Type: 'AWS::RDS::DBInstance'
    DeletionPolicy: Snapshot
    Properties:
      AllocatedStorage: '20'
      DBInstanceClass: 'db.t3.micro'
      Engine: 'mysql'
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      DBName: 'CognitoUsers'
      MultiAZ: false
      BackupRetentionPeriod: '3'
      VPCSecurityGroups:
        - Ref: DBSecurityGroup
      DBSubnetGroupName: !Ref DBSubnetGroup

  DBSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: Subnet group for CognitoUserDB
      SubnetIds:
        - subnet-05a0a95890869bb7c  # Replace with your subnet IDs
        - subnet-03fb4282ee13c34fd
        - subnet-0f163bb5311049426

  DBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow MySQL connections
      VpcId: vpc-0938e11b961748f12 # Replace with your VPC ID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          CidrIp: 0.0.0.0/0  # You might want to restrict this to your Lambda's security group or specific IPs
